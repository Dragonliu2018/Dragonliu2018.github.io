<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://dragonliu2018.github.io/atom.xml" rel="self"/>
  
  <link href="https://dragonliu2018.github.io/"/>
  <updated>2025-09-26T16:23:44.606Z</updated>
  <id>https://dragonliu2018.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>[doris][DEFAULT] 支持 PI 作为列的默认值</title>
    <link href="https://dragonliu2018.github.io/2025/09/27/doris-DEFAULT-%E6%94%AF%E6%8C%81-PI-%E4%BD%9C%E4%B8%BA%E5%88%97%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC/"/>
    <id>https://dragonliu2018.github.io/2025/09/27/doris-DEFAULT-%E6%94%AF%E6%8C%81-PI-%E4%BD%9C%E4%B8%BA%E5%88%97%E7%9A%84%E9%BB%98%E8%AE%A4%E5%80%BC/</id>
    <published>2025-09-26T16:22:11.000Z</published>
    <updated>2025-09-26T16:23:44.606Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-issue-介绍"><a class="markdownIt-Anchor" href="#1-issue-介绍"></a> 1 issue 介绍</h1><ul><li><strong>issue:</strong> <a href="https://github.com/apache/doris/issues/34228">https://github.com/apache/doris/issues/34228</a></li><li><strong>PR</strong>：<a href="https://github.com/apache/doris/pull/36280">https://github.com/apache/doris/pull/36280</a></li></ul><p>doris 建表时，可以指定字段的默认值，比如日期类型 date，指定默认值为 current_timestamp，如果向表中插入数据，日期字段缺失的话，会设置默认值 current_timestamp。</p><p>这个任务是添加默认值 PI，可以支持以下语法：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> IF <span class="keyword">NOT</span> <span class="keyword">EXISTS</span> t1</span><br><span class="line">(</span><br><span class="line">    k TINYINT,</span><br><span class="line">    v <span class="keyword">double</span> <span class="keyword">not null</span> <span class="keyword">DEFAULT</span> PI</span><br><span class="line">)</span><br><span class="line"><span class="keyword">UNIQUE</span> KEY(k)</span><br><span class="line">DISTRIBUTED <span class="keyword">BY</span> HASH(k)</span><br><span class="line">PROPERTIES(&quot;replication_num&quot; <span class="operator">=</span> &quot;1&quot;);</span><br></pre></td></tr></table></figure><h1 id="2-实现"><a class="markdownIt-Anchor" href="#2-实现"></a> 2 实现</h1><ol><li><p>这个任务涉及到修改语法，也就是词法分析和语法分析，doris 是基于 antlr4 实现的，在 columnDef 的 DEFAULT 关键字后边加上可选关键字 <code>PI</code>；</p></li><li><p>然后就需要进行绑定，将 Java 中的类绑定到 AST 对应节点，antlr4 提供了 Visitor 去访问 ****AST 中的节点。在 doris 中调用 <code>LogicalPlanBuilder</code> 来基于 AST 节点去绑定数据库实体，从而构建逻辑计划树，这里在 ColumDef 逻辑计划中就需要增加 PI 的绑定；</p></li><li><p>PI 精度选择：采用 &lt;math.h&gt; 中的 PI 值</p> <figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta"># <span class="keyword">define</span> M_PI           3.14159265358979323846  <span class="comment">/* pi */</span></span></span><br></pre></td></tr></table></figure></li></ol><h1 id="3-测试"><a class="markdownIt-Anchor" href="#3-测试"></a> 3 测试</h1><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database test PROPERTIES (&quot;replication_allocation&quot;<span class="operator">=</span> &quot;tag.location.default: 1&quot; );</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> t1</span><br><span class="line">(</span><br><span class="line">    k TINYINT,</span><br><span class="line">    v1 <span class="keyword">double</span> <span class="keyword">not null</span> <span class="keyword">DEFAULT</span> PI</span><br><span class="line">)</span><br><span class="line"><span class="keyword">UNIQUE</span> KEY(K)</span><br><span class="line">DISTRIBUTED <span class="keyword">BY</span> HASH(k)</span><br><span class="line">PROPERTIES(&quot;replication_num&quot; <span class="operator">=</span> &quot;1&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">set</span> enable_unique_key_partial_update<span class="operator">=</span><span class="literal">true</span>;</span><br><span class="line"><span class="keyword">set</span> enable_insert_strict<span class="operator">=</span><span class="literal">false</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert into</span> t1 (k) <span class="keyword">values</span> (<span class="number">1</span>);</span><br></pre></td></tr></table></figure><p><a href="https://doris.apache.org/zh-CN/docs/sql-manual/sql-statements/Data-Manipulation-Statements/Manipulation/INSERT?_highlight=enable_unique_key_partial_update#description">https://doris.apache.org/zh-CN/docs/sql-manual/sql-statements/Data-Manipulation-Statements/Manipulation/INSERT?_highlight=enable_unique_key_partial_update#description</a></p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">CREATE TABLE</span> t1</span><br><span class="line">(</span><br><span class="line">    k TINYINT,</span><br><span class="line">    v1 <span class="type">date</span> <span class="keyword">not null</span> <span class="keyword">DEFAULT</span> now</span><br><span class="line">)</span><br><span class="line"><span class="keyword">UNIQUE</span> KEY(K)</span><br><span class="line">DISTRIBUTED <span class="keyword">BY</span> HASH(k)</span><br><span class="line">PROPERTIES(&quot;replication_num&quot; <span class="operator">=</span> &quot;1&quot;);</span><br></pre></td></tr></table></figure><h1 id="x-参考"><a class="markdownIt-Anchor" href="#x-参考"></a> X 参考</h1><ul><li><strong>default value →  hll_empty</strong>: <a href="https://github.com/apache/doris/pull/34447">https://github.com/apache/doris/pull/34447</a></li><li><strong>default value →  uuid</strong>：<a href="https://github.com/apache/doris/pull/34211">https://github.com/apache/doris/pull/34211</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-issue-介绍&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-issue-介绍&quot;&gt;&lt;/a&gt; 1 issue 介绍&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;issue:&lt;/strong&gt; &lt;a href=&quot;https://g</summary>
      
    
    
    
    <category term="DB" scheme="https://dragonliu2018.github.io/categories/DB/"/>
    
    <category term="doris" scheme="https://dragonliu2018.github.io/categories/DB/doris/"/>
    
    
  </entry>
  
  <entry>
    <title>[doris][insert] 支持具有 CTE 的 Insert</title>
    <link href="https://dragonliu2018.github.io/2025/09/27/doris-insert-%E6%94%AF%E6%8C%81%E5%85%B7%E6%9C%89-CTE-%E7%9A%84-Insert/"/>
    <id>https://dragonliu2018.github.io/2025/09/27/doris-insert-%E6%94%AF%E6%8C%81%E5%85%B7%E6%9C%89-CTE-%E7%9A%84-Insert/</id>
    <published>2025-09-26T16:17:55.000Z</published>
    <updated>2025-09-26T16:20:05.368Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-介绍"><a class="markdownIt-Anchor" href="#1-介绍"></a> 1 介绍</h1><ul><li><strong>issue:</strong> <a href="https://github.com/apache/doris/issues/35784">https://github.com/apache/doris/issues/35784</a></li><li><strong>PR</strong>: <a href="https://github.com/apache/doris/pull/36150">https://github.com/apache/doris/pull/36150</a></li></ul><p>让 doris(优化器 nereids) 支持具有 CTE 的 Insert，语法如下：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">WITH</span> cte1 <span class="keyword">as</span> (</span><br><span class="line">  ...</span><br><span class="line">)</span><br><span class="line"><span class="keyword">INSERT INTO</span> tbl1</span><br><span class="line"><span class="keyword">SELECT</span> ...</span><br></pre></td></tr></table></figure><h1 id="2-实现"><a class="markdownIt-Anchor" href="#2-实现"></a> 2 实现</h1><ol><li>这个任务涉及到修改语法，也就是词法分析和语法分析，doris 是基于 antlr4 实现的，在 insert 位置加上可选关键字 CTE（<code>cte?</code>），这样就可以生成 AST（抽象语法树）；</li><li>然后就需要进行绑定，将 Java 中的类绑定到 AST 对应节点，antlr4 提供了 Visitor 去访问 AST 中的节点。在 doris 中调用 <code>LogicalPlanBuilder</code> 来基于 AST 节点去绑定数据库实体，从而构建逻辑计划树，这里就需要增加 CTE 的绑定，并且在构建 InsertCommand （逻辑计划节点）的时候将 CTE 变量传进去；</li><li>InsertCommand 里面调用 initPlan() 进行逻辑计划改写，主要是把 cte 作为孩子节点挂到原来的逻辑计划树。</li></ol><h1 id="3-测试"><a class="markdownIt-Anchor" href="#3-测试"></a> 3 测试</h1><h2 id="31-insertintotablecommand"><a class="markdownIt-Anchor" href="#31-insertintotablecommand"></a> 3.1 InsertIntoTableCommand</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database test;</span><br><span class="line">use test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create table</span> t1 (val <span class="type">int</span>) PROPERTIES(<span class="string">&#x27;replication_num&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">create table</span> t2 (id <span class="type">int</span>, val <span class="type">int</span>) <span class="keyword">unique</span> key(id) DISTRIBUTED <span class="keyword">BY</span> HASH (id) PROPERTIES(<span class="string">&#x27;replication_num&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert into</span> t1 <span class="keyword">values</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> cte1 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 <span class="keyword">where</span> val <span class="operator">&lt;=</span> <span class="number">3</span>) <span class="keyword">insert into</span> <span class="keyword">table</span> t2 <span class="keyword">select</span> val<span class="operator">+</span><span class="number">10</span>, val<span class="operator">+</span><span class="number">100</span> <span class="keyword">from</span> cte1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t2;</span><br></pre></td></tr></table></figure><h2 id="32-insertoverwritetablecommand"><a class="markdownIt-Anchor" href="#32-insertoverwritetablecommand"></a> 3.2 InsertOverwriteTableCommand</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database test;</span><br><span class="line">use test;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create table</span> t1 (val <span class="type">int</span>) PROPERTIES(<span class="string">&#x27;replication_num&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"><span class="keyword">create table</span> t2 (id <span class="type">int</span>, val <span class="type">int</span>) <span class="keyword">unique</span> key(id) DISTRIBUTED <span class="keyword">BY</span> HASH (id) PROPERTIES(<span class="string">&#x27;replication_num&#x27;</span><span class="operator">=</span><span class="string">&#x27;1&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert into</span> t1 <span class="keyword">values</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> cte1 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t1 <span class="keyword">where</span> val <span class="operator">&lt;=</span> <span class="number">3</span>) <span class="keyword">insert</span> overwrite <span class="keyword">table</span> t2 <span class="keyword">select</span> val<span class="operator">+</span><span class="number">10</span>, val<span class="operator">+</span><span class="number">100</span> <span class="keyword">from</span> cte1;</span><br><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> t2 <span class="keyword">select</span> val<span class="operator">+</span><span class="number">10</span>, val<span class="operator">+</span><span class="number">100</span> <span class="keyword">from</span> t1;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t2;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> t1 <span class="keyword">partition</span>(p2) <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t2;</span><br><span class="line"><span class="keyword">with</span> cte1 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="number">4</span>) <span class="keyword">insert</span> overwrite <span class="keyword">table</span> t1 <span class="keyword">partition</span>(p2) <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> cte1;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">insert</span> overwrite <span class="keyword">table</span> t1 <span class="keyword">partition</span>(<span class="operator">*</span>) <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t2;</span><br><span class="line"><span class="keyword">with</span> cte1 <span class="keyword">as</span> (<span class="keyword">select</span> <span class="number">1</span>) <span class="keyword">insert</span> overwrite <span class="keyword">table</span> t1 <span class="keyword">partition</span>(<span class="operator">*</span>) <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> cte1;</span><br></pre></td></tr></table></figure><h2 id="33-batchinsertintotablecommand"><a class="markdownIt-Anchor" href="#33-batchinsertintotablecommand"></a> 3.3 BatchInsertIntoTableCommand</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">sql</span> &quot;&quot;&quot;begin&quot;&quot;&quot;</span><br><span class="line"><span class="keyword">sql</span> &quot;&quot;&quot;insert into $t1 select * from $t2&quot;&quot;&quot;</span><br><span class="line"><span class="keyword">sql</span> &quot;&quot;&quot;insert into $t1 select * from $t3&quot;&quot;&quot;</span><br><span class="line"><span class="keyword">sql</span> &quot;commit&quot;</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">sql</span> &quot;&quot;&quot;insert into $t1 values(1)&quot;&quot;&quot;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">sql</span> &quot;&quot;&quot;insert into $t1 values(2)&quot;&quot;&quot;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">sql</span> &quot;&quot;&quot;insert into $t1 values(3)&quot;&quot;&quot;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">sql</span> &quot;&quot;&quot;with cte1 as (select 1) insert into $t1 select * from cte1&quot;&quot;&quot;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">sql</span> &quot;&quot;&quot;with cte2 as (select 2) insert into $t1 select * from cte2&quot;&quot;&quot;</span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">sql</span> &quot;&quot;&quot;with cte3 as (select 3) insert into $t1 select * from cte3&quot;&quot;&quot;</span><br></pre></td></tr></table></figure><h1 id="x-参考"><a class="markdownIt-Anchor" href="#x-参考"></a> X 参考</h1><ul><li>insert 使用文档：<a href="https://doris.apache.org/docs/dev/sql-manual/sql-statements/Data-Manipulation-Statements/Manipulation/INSERT/">链接</a></li><li>insert overwrite 使用文档: <a href="https://doris.apache.org/docs/dev/sql-manual/sql-statements/Data-Manipulation-Statements/Manipulation/INSERT-OVERWRITE/">链接</a></li><li>Transaction Load 使用文档：<a href="https://doris.apache.org/zh-CN/docs/dev/data-operate/import/transaction-load-manual/">链接</a></li><li>insert &amp; delete support CTE:  <a href="https://github.com/apache/doris/pull/23384">https://github.com/apache/doris/pull/23384</a></li><li>划分 InsertIntoTableCommand：<a href="https://github.com/apache/doris/pull/27947">https://github.com/apache/doris/pull/27947</a></li><li><a href="https://juejin.cn/post/7018521754125467661"><strong>语法解析器ANTLR4从入门到实践</strong></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-介绍&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-介绍&quot;&gt;&lt;/a&gt; 1 介绍&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;issue:&lt;/strong&gt; &lt;a href=&quot;https://github.com/apache/d</summary>
      
    
    
    
    <category term="DB" scheme="https://dragonliu2018.github.io/categories/DB/"/>
    
    <category term="doris" scheme="https://dragonliu2018.github.io/categories/DB/doris/"/>
    
    
  </entry>
  
  <entry>
    <title>[doris] 支持删除回收站内容</title>
    <link href="https://dragonliu2018.github.io/2025/09/27/doris-%E6%94%AF%E6%8C%81%E5%88%A0%E9%99%A4%E5%9B%9E%E6%94%B6%E7%AB%99%E5%86%85%E5%AE%B9/"/>
    <id>https://dragonliu2018.github.io/2025/09/27/doris-%E6%94%AF%E6%8C%81%E5%88%A0%E9%99%A4%E5%9B%9E%E6%94%B6%E7%AB%99%E5%86%85%E5%AE%B9/</id>
    <published>2025-09-26T16:09:09.000Z</published>
    <updated>2025-09-26T16:14:59.449Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-issue-介绍"><a class="markdownIt-Anchor" href="#1-issue-介绍"></a> 1 issue 介绍</h1><ul><li><strong>issue:</strong> <a href="https://github.com/apache/doris/issues/31348">https://github.com/apache/doris/issues/31348</a></li><li><strong>PR</strong>: <a href="https://github.com/apache/doris/pull/31893">https://github.com/apache/doris/pull/31893</a></li></ul><p>回收站（Catalog Recycle Bin）：</p><hr /><p>将数据库、表和分区删除后，会将他们放到回收站，然后经过 <code>catalog_trash_expire_second</code> 秒(在 <code>fe.conf</code> 中设置)后会被删除。目标是提供类似下面的命令来立即从回收站中删除他们：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">drop</span> the database, <span class="keyword">table</span> <span class="keyword">and</span> <span class="keyword">partition</span> <span class="keyword">with</span> the specified db_id</span><br><span class="line"><span class="keyword">drop</span> catalog recycle bin <span class="keyword">where</span> <span class="string">&#x27;DbId&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">drop</span> the <span class="keyword">table</span> <span class="keyword">and</span> <span class="keyword">partition</span> <span class="keyword">with</span> the specified table_id</span><br><span class="line"><span class="keyword">drop</span> catalog recycle bin <span class="keyword">where</span> <span class="string">&#x27;TableId&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> <span class="keyword">drop</span> the <span class="keyword">partition</span> <span class="keyword">with</span> the specified partition_id</span><br><span class="line"><span class="keyword">drop</span> catalog recycle bin <span class="keyword">where</span> <span class="string">&#x27;PartitionId&#x27;</span> <span class="operator">=</span> <span class="string">&#x27;&#x27;</span>;</span><br></pre></td></tr></table></figure><h1 id="2-实现"><a class="markdownIt-Anchor" href="#2-实现"></a> 2 实现</h1><ol><li>这个任务涉及到添加语法，doris 是基于 antlr4 实现的，在 statementBase 位置加上新语法 <code>drop catalog recycle bin</code>，这样就可以生成 AST（抽象语法树）；</li><li>然后就需要进行绑定，将 Java 中的类绑定到 AST 对应节点，antlr4 提供了 Visitor 去访问 ****AST 中的节点。在 doris 中调用 <code>LogicalPlanBuilder</code> 来基于 AST 节点去绑定数据库实体，从而构建逻辑计划树，这里只需要记录 <code>id</code> 和 <code>idType</code> 即可；</li><li>catalog recycle bin 有 hashmap 存放 id 和具体信息的映射，我们根据 idType 和 id 去到 hashmap 搜索，如果没有对应 id 则抛出异常，否则进行删除操作；对于删除数据库的操作，其下的所有表和分区需要删除。</li></ol><h1 id="3-测试"><a class="markdownIt-Anchor" href="#3-测试"></a> 3 测试</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./run-regression-test.sh --run test_drop_catalog_recycle_bin</span><br></pre></td></tr></table></figure><h1 id="x-参考"><a class="markdownIt-Anchor" href="#x-参考"></a> X 参考</h1><ul><li>相关代码在 <code>CatalogRecycleBin.java</code>，参考 <code>erasePartition</code>, <code>eraseTable</code> 和 <code>erasePartition</code> 如何将回收站内容删除。</li><li>从回收站恢复数据库、表和分区的命令：<a href="https://doris.apache.org/zh-CN/docs/admin-manual/data-admin/delete-recover/">https://doris.apache.org/zh-CN/docs/admin-manual/data-admin/delete-recover/</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-issue-介绍&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-issue-介绍&quot;&gt;&lt;/a&gt; 1 issue 介绍&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;issue:&lt;/strong&gt; &lt;a href=&quot;https://g</summary>
      
    
    
    
    <category term="DB" scheme="https://dragonliu2018.github.io/categories/DB/"/>
    
    <category term="doris" scheme="https://dragonliu2018.github.io/categories/DB/doris/"/>
    
    
  </entry>
  
  <entry>
    <title>[doris] insert 实现解析</title>
    <link href="https://dragonliu2018.github.io/2025/09/27/doris-insert-%E5%AE%9E%E7%8E%B0%E8%A7%A3%E6%9E%90/"/>
    <id>https://dragonliu2018.github.io/2025/09/27/doris-insert-%E5%AE%9E%E7%8E%B0%E8%A7%A3%E6%9E%90/</id>
    <published>2025-09-26T16:05:18.000Z</published>
    <updated>2025-09-26T16:13:11.753Z</updated>
    
    
    
    
    <category term="DB" scheme="https://dragonliu2018.github.io/categories/DB/"/>
    
    <category term="doris" scheme="https://dragonliu2018.github.io/categories/DB/doris/"/>
    
    
  </entry>
  
  <entry>
    <title>[doris] Catalog Recycle Bin 实现解析</title>
    <link href="https://dragonliu2018.github.io/2025/09/27/doris-Catalog-Recycle-Bin-%E5%AE%9E%E7%8E%B0%E8%A7%A3%E6%9E%90/"/>
    <id>https://dragonliu2018.github.io/2025/09/27/doris-Catalog-Recycle-Bin-%E5%AE%9E%E7%8E%B0%E8%A7%A3%E6%9E%90/</id>
    <published>2025-09-26T16:04:43.000Z</published>
    <updated>2025-09-26T16:14:19.229Z</updated>
    
    
    
    
    <category term="DB" scheme="https://dragonliu2018.github.io/categories/DB/"/>
    
    <category term="doris" scheme="https://dragonliu2018.github.io/categories/DB/doris/"/>
    
    
  </entry>
  
  <entry>
    <title>[doris] 变量配置汇总</title>
    <link href="https://dragonliu2018.github.io/2025/09/26/doris-%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E6%B1%87%E6%80%BB/"/>
    <id>https://dragonliu2018.github.io/2025/09/26/doris-%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E6%B1%87%E6%80%BB/</id>
    <published>2025-09-26T15:36:51.000Z</published>
    <updated>2025-09-26T16:15:19.919Z</updated>
    
    <content type="html"><![CDATA[<h1 id="variables"><a class="markdownIt-Anchor" href="#variables"></a> variables</h1><h2 id="查看变量"><a class="markdownIt-Anchor" href="#查看变量"></a> 查看变量</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">show</span> variables <span class="keyword">like</span> &quot;%nereids%&quot;;</span><br></pre></td></tr></table></figure><h2 id="设置变量"><a class="markdownIt-Anchor" href="#设置变量"></a> 设置变量</h2><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SET</span> enable_nereids_planner<span class="operator">=</span><span class="literal">false</span>; <span class="comment">-- 是否开启新优化器 nereids</span></span><br></pre></td></tr></table></figure><h1 id="fe-config"><a class="markdownIt-Anchor" href="#fe-config"></a> FE config</h1><h2 id="查看配置"><a class="markdownIt-Anchor" href="#查看配置"></a> 查看配置</h2><h2 id="设置配置"><a class="markdownIt-Anchor" href="#设置配置"></a> 设置配置</h2><h1 id="be-config"><a class="markdownIt-Anchor" href="#be-config"></a> BE config</h1><h2 id="查看配置-2"><a class="markdownIt-Anchor" href="#查看配置-2"></a> 查看配置</h2><h2 id="设置配置-2"><a class="markdownIt-Anchor" href="#设置配置-2"></a> 设置配置</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;variables&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#variables&quot;&gt;&lt;/a&gt; variables&lt;/h1&gt;
&lt;h2 id=&quot;查看变量&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#查看变量</summary>
      
    
    
    
    <category term="DB" scheme="https://dragonliu2018.github.io/categories/DB/"/>
    
    <category term="doris" scheme="https://dragonliu2018.github.io/categories/DB/doris/"/>
    
    
  </entry>
  
  <entry>
    <title>[doris] 编译教程</title>
    <link href="https://dragonliu2018.github.io/2025/09/26/doris-%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/"/>
    <id>https://dragonliu2018.github.io/2025/09/26/doris-%E7%BC%96%E8%AF%91%E6%95%99%E7%A8%8B/</id>
    <published>2025-09-26T01:09:20.000Z</published>
    <updated>2025-09-26T16:15:30.053Z</updated>
    
    
    
    
    <category term="DB" scheme="https://dragonliu2018.github.io/categories/DB/"/>
    
    <category term="doris" scheme="https://dragonliu2018.github.io/categories/DB/doris/"/>
    
    
  </entry>
  
  <entry>
    <title>[doris] 编译报错汇总</title>
    <link href="https://dragonliu2018.github.io/2025/09/26/doris-%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/"/>
    <id>https://dragonliu2018.github.io/2025/09/26/doris-%E7%BC%96%E8%AF%91%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/</id>
    <published>2025-09-26T01:09:04.000Z</published>
    <updated>2025-09-26T16:13:33.134Z</updated>
    
    <content type="html"><![CDATA[<h1 id="macos-编译报错"><a class="markdownIt-Anchor" href="#macos-编译报错"></a> macos 编译报错</h1><h2 id="报错1-mvn-is-not-found"><a class="markdownIt-Anchor" href="#报错1-mvn-is-not-found"></a> <strong>报错1: mvn is not found</strong></h2><p>【<strong>报错</strong>】</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  doris git:(master) bash build.sh</span><br><span class="line">Python 3.11.6</span><br><span class="line">The JAVA_HOME environment variable is not defined correctly,</span><br><span class="line">this environment variable is needed to run this program.</span><br><span class="line">Error: mvn is not found</span><br></pre></td></tr></table></figure><hr /><p>【<strong>解决</strong>】</p><p>设置 JAVA_HOME 环境变量。</p><p><a href="https://blog.csdn.net/watson2017/article/details/103243301">https://blog.csdn.net/watson2017/article/details/103243301</a></p><h2 id="报错2-代码-bug"><a class="markdownIt-Anchor" href="#报错2-代码-bug"></a> <strong>报错2: 代码 bug</strong></h2><p>【<strong>报错</strong>】</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/Users/dragonliu/code/doris/be/src/vec/core/extended_types.h:42:8: error: reference to <span class="string">&#x27;is_signed&#x27;</span> is ambiguous</span><br></pre></td></tr></table></figure><hr /><p>【<strong>解决</strong>】</p><p>代码 bug，新版已经修复：</p><p><a href="https://github.com/apache/doris/commit/462db3d5bea5fe3e4e3b9c6e592b91ad2aff6ba4">https://github.com/apache/doris/commit/462db3d5bea5fe3e4e3b9c6e592b91ad2aff6ba4</a></p><h2 id="报错3-swapon-command-not-found"><a class="markdownIt-Anchor" href="#报错3-swapon-command-not-found"></a> <strong>报错3: swapon: command not found</strong></h2><p>【<strong>报错</strong>】</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  be git:(master) sh bin/start_be.sh --daemon</span><br><span class="line">bin/start_be.sh: line 86: swapon: <span class="built_in">command</span> not found</span><br></pre></td></tr></table></figure><hr /><p>【<strong>解决</strong>】</p><p>修改 <code>doris/output/be/bin/start_be.sh</code>，将 swapon 部分注释掉</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># if [[ &quot;$(swapon -s | wc -l)&quot; -gt 1 ]]; then</span></span><br><span class="line"><span class="comment">#     echo &quot;Please disable swap memory before installation.&quot;</span></span><br><span class="line"><span class="comment">#     exit 1</span></span><br><span class="line"><span class="comment"># fi</span></span><br></pre></td></tr></table></figure><h2 id="报错4-command-not-found-mysql-未解决"><a class="markdownIt-Anchor" href="#报错4-command-not-found-mysql-未解决"></a> <strong>报错4: command not found: mysql → 未解决</strong></h2><p>【<strong>报错</strong>】</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  bin git:(master) mysql -h 127.0.0.1 -P 9030 -u root</span><br><span class="line">zsh: <span class="built_in">command</span> not found: mysql</span><br></pre></td></tr></table></figure><hr /><p>【<strong>解决</strong>】</p><p>下载 mysql client:</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install mysql-client</span><br></pre></td></tr></table></figure><p>因为与 mysql (which contains client libraries) 冲突，需要配置环境变量：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;export PATH=&quot;/usr/local/opt/mysql-client/bin:$PATH&quot;&#x27;</span> &gt;&gt; ~/.zshrc</span><br><span class="line">~ <span class="built_in">source</span> ~/.zshrc</span><br></pre></td></tr></table></figure><p>错误：</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  bin git:(master) mysql -h 127.0.0.1 -P 9030 -u root</span><br><span class="line">ERROR 2003 (HY000): Can<span class="string">&#x27;t connect to MySQL server on &#x27;</span>127.0.0.1:9030<span class="string">&#x27; (61)</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;macos-编译报错&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#macos-编译报错&quot;&gt;&lt;/a&gt; macos 编译报错&lt;/h1&gt;
&lt;h2 id=&quot;报错1-mvn-is-not-found&quot;&gt;&lt;a class=&quot;markdownIt-</summary>
      
    
    
    
    <category term="DB" scheme="https://dragonliu2018.github.io/categories/DB/"/>
    
    <category term="doris" scheme="https://dragonliu2018.github.io/categories/DB/doris/"/>
    
    
  </entry>
  
  <entry>
    <title>[doris] 运行报错汇总</title>
    <link href="https://dragonliu2018.github.io/2025/09/26/doris-%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/"/>
    <id>https://dragonliu2018.github.io/2025/09/26/doris-%E8%BF%90%E8%A1%8C%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/</id>
    <published>2025-09-26T01:08:53.000Z</published>
    <updated>2025-09-26T16:15:05.380Z</updated>
    
    <content type="html"><![CDATA[<h1 id="cluster-default_cluster-has-no-available-capacity"><a class="markdownIt-Anchor" href="#cluster-default_cluster-has-no-available-capacity"></a> Cluster default_cluster has no available capacity</h1><p>【<strong>问题</strong>】</p><p>建表报错：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [demo]<span class="operator">&gt;</span> <span class="keyword">create table</span> mytable (</span><br><span class="line">k1 TINYINT,</span><br><span class="line">  k2 <span class="type">DECIMAL</span>(<span class="number">10</span>, <span class="number">2</span>) <span class="keyword">DEFAULT</span> &quot;10.05&quot;,</span><br><span class="line">  k3 <span class="type">CHAR</span>(<span class="number">10</span>) COMMENT &quot;string column&quot;,</span><br><span class="line">  k4 <span class="type">INT</span> <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> &quot;1&quot; COMMENT &quot;int column&quot; )</span><br><span class="line">  COMMENT &quot;my first table&quot;</span><br><span class="line">  DISTRIBUTED <span class="keyword">BY</span> HASH(k1)</span><br><span class="line">  BUCKETS <span class="number">1</span></span><br><span class="line">  PROPERTIES (&quot;replication_num&quot; <span class="operator">=</span> &quot;1&quot;);</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): errCode <span class="operator">=</span> <span class="number">2</span>, detailMessage <span class="operator">=</span> Cluster default_cluster has <span class="keyword">no</span> available capacity</span><br></pre></td></tr></table></figure><hr /><p>【<strong>原因</strong>】</p><p>没有将 be 添加到集群。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [test]<span class="operator">&gt;</span> <span class="keyword">show</span> backends;</span><br><span class="line"><span class="keyword">Empty</span> <span class="keyword">set</span> (<span class="number">0.03</span> sec)</span><br></pre></td></tr></table></figure><hr /><p>【<strong>解决</strong>】</p><p>添加 be 到集群：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"># <span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">ADD</span> BACKEND &quot;be_host_ip:heartbeat_service_port&quot;;</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">ADD</span> BACKEND &quot;127.0.0.1:9050&quot;;</span><br></pre></td></tr></table></figure><p>ref: <a href="https://doris.apache.org/zh-CN/docs/2.1/gettingStarted/quick-start">https://doris.apache.org/zh-CN/docs/2.1/gettingStarted/quick-start</a></p><h1 id="failed-to-find-1-backends-for-policy"><a class="markdownIt-Anchor" href="#failed-to-find-1-backends-for-policy"></a> Failed to find 1 backends for policy</h1><p>【<strong>问题</strong>】</p><p>建表报错：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [demo]<span class="operator">&gt;</span> <span class="keyword">create table</span> mytable (</span><br><span class="line">k1 TINYINT,</span><br><span class="line">  k2 <span class="type">DECIMAL</span>(<span class="number">10</span>, <span class="number">2</span>) <span class="keyword">DEFAULT</span> &quot;10.05&quot;,</span><br><span class="line">  k3 <span class="type">CHAR</span>(<span class="number">10</span>) COMMENT &quot;string column&quot;,</span><br><span class="line">  k4 <span class="type">INT</span> <span class="keyword">NOT NULL</span> <span class="keyword">DEFAULT</span> &quot;1&quot; COMMENT &quot;int column&quot; )</span><br><span class="line">  COMMENT &quot;my first table&quot;</span><br><span class="line">  DISTRIBUTED <span class="keyword">BY</span> HASH(k1)</span><br><span class="line">  BUCKETS <span class="number">1</span></span><br><span class="line">  PROPERTIES (&quot;replication_num&quot; <span class="operator">=</span> &quot;1&quot;);</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): errCode <span class="operator">=</span> <span class="number">2</span>, detailMessage <span class="operator">=</span> Failed <span class="keyword">to</span> find <span class="number">1</span> backends <span class="keyword">for</span> policy: cluster<span class="operator">|</span>query<span class="operator">|</span>load<span class="operator">|</span>schedule<span class="operator">|</span>tags<span class="operator">|</span>medium: default_cluster<span class="operator">|</span><span class="literal">false</span><span class="operator">|</span><span class="literal">false</span><span class="operator">|</span><span class="literal">true</span><span class="operator">|</span>[&#123;&quot;location&quot; : &quot;default&quot;&#125;]<span class="operator">|</span>HDD</span><br></pre></td></tr></table></figure><hr /><p>【<strong>原因</strong>】</p><p>BE 的 IP 地址错误:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [demo]<span class="operator">&gt;</span> <span class="keyword">show</span> backends;</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-----------------+-----------+---------------+--------+----------+----------+---------------+---------------+-------+----------------------+-----------------------+-----------+------------------+---------------+---------------+---------+----------------+--------------------------+--------------------------------------+---------+---------------------------------------------------------------------------------------------------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> BackendId <span class="operator">|</span> Cluster         <span class="operator">|</span> IP        <span class="operator">|</span> HeartbeatPort <span class="operator">|</span> BePort <span class="operator">|</span> HttpPort <span class="operator">|</span> BrpcPort <span class="operator">|</span> LastStartTime <span class="operator">|</span> LastHeartbeat <span class="operator">|</span> Alive <span class="operator">|</span> SystemDecommissioned <span class="operator">|</span> ClusterDecommissioned <span class="operator">|</span> TabletNum <span class="operator">|</span> DataUsedCapacity <span class="operator">|</span> AvailCapacity <span class="operator">|</span> TotalCapacity <span class="operator">|</span> UsedPct <span class="operator">|</span> MaxDiskUsedPct <span class="operator">|</span> Tag                      <span class="operator">|</span> ErrMsg                               <span class="operator">|</span> Version <span class="operator">|</span> Status                                                                                                        <span class="operator">|</span> NodeRole <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-----------------+-----------+---------------+--------+----------+----------+---------------+---------------+-------+----------------------+-----------------------+-----------+------------------+---------------+---------------+---------+----------------+--------------------------+--------------------------------------+---------+---------------------------------------------------------------------------------------------------------------+----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">11002</span>     <span class="operator">|</span> default_cluster <span class="operator">|</span> <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span> <span class="operator">|</span> <span class="number">9050</span>          <span class="operator">|</span> <span class="number">-1</span>     <span class="operator">|</span> <span class="number">-1</span>       <span class="operator">|</span> <span class="number">-1</span>       <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="keyword">NULL</span>          <span class="operator">|</span> <span class="literal">false</span> <span class="operator">|</span> <span class="literal">false</span>                <span class="operator">|</span> <span class="literal">false</span>                 <span class="operator">|</span> <span class="number">0</span>         <span class="operator">|</span> <span class="number">0.000</span>            <span class="operator">|</span> <span class="number">1.000</span> B       <span class="operator">|</span> <span class="number">0.000</span>         <span class="operator">|</span> <span class="number">0.00</span> <span class="operator">%</span>  <span class="operator">|</span> <span class="number">0.00</span> <span class="operator">%</span>         <span class="operator">|</span> &#123;&quot;location&quot; : &quot;default&quot;&#125; <span class="operator">|</span> actual backend <span class="keyword">local</span> ip: <span class="number">172.17</span><span class="number">.0</span><span class="number">.26</span> <span class="operator">|</span>         <span class="operator">|</span> &#123;&quot;lastSuccessReportTabletsTime&quot;:&quot;N/A&quot;,&quot;lastStreamLoadTime&quot;:<span class="number">-1</span>,&quot;isQueryDisabled&quot;:<span class="literal">false</span>,&quot;isLoadDisabled&quot;:<span class="literal">false</span>&#125; <span class="operator">|</span>          <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------+-----------------+-----------+---------------+--------+----------+----------+---------------+---------------+-------+----------------------+-----------------------+-----------+------------------+---------------+---------------+---------+----------------+--------------------------+--------------------------------------+---------+---------------------------------------------------------------------------------------------------------------+----------+</span></span><br></pre></td></tr></table></figure><hr /><p>【<strong>解决</strong>】</p><p>根据上面的 ErrMsg 提示，改正 BE 的 IP 地址:</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">MySQL [(<span class="keyword">none</span>)]<span class="operator">&gt;</span>  <span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">ADD</span> BACKEND &quot;172.17.0.26:9050&quot;;</span><br></pre></td></tr></table></figure><h1 id="mysql-可以登录不可以建立分区表-多个-be"><a class="markdownIt-Anchor" href="#mysql-可以登录不可以建立分区表-多个-be"></a> mysql 可以登录，不可以建立分区表 → 多个 be</h1><p>【<strong>问题</strong>】</p><p>无法建立分区表。</p><hr /><p>【<strong>原因 &amp; 解决</strong>】</p><p>原因是有多个 be 实例（对应多个网卡），删除多余 be即可。</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">SHOW</span> PROC <span class="string">&#x27;/backends&#x27;</span>;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> DROPP BACKEND &quot;59982&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-26_23-46-06.png" alt="" /></p><h1 id="mysql-可以登录不可以建立分区表-没有-be"><a class="markdownIt-Anchor" href="#mysql-可以登录不可以建立分区表-没有-be"></a> mysql 可以登录，不可以建立分区表 → 没有 be</h1><p>【<strong>问题</strong>】</p><p>无法建立分区表，报错如下：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">ERROR <span class="number">1105</span> (HY000): errCode <span class="operator">=</span> <span class="number">2</span>, detailMessage <span class="operator">=</span> <span class="keyword">System</span> has <span class="keyword">no</span> available disk capacity <span class="keyword">or</span> <span class="keyword">no</span> available BE nodes</span><br></pre></td></tr></table></figure><hr /><p>【<strong>原因 &amp; 解决</strong>】</p><p>原因是没有 be 实例，添加一个 be 实例并且重启 be 即可：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="comment">-- ALTER SYSTEM ADD BACKEND &quot;host:port&quot;;</span></span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">SYSTEM</span> <span class="keyword">ADD</span> BACKEND &quot;127.0.0.1:9050&quot;;</span><br></pre></td></tr></table></figure><h1 id="mysql-可以登录不可以建立分区表-be-数量不够"><a class="markdownIt-Anchor" href="#mysql-可以登录不可以建立分区表-be-数量不够"></a> mysql 可以登录，不可以建立分区表 → be 数量不够</h1><p>【<strong>问题</strong>】</p><p>不可以建立分区表，报错如下：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line">ERROR <span class="number">1105</span> (HY000): errCode <span class="operator">=</span> <span class="number">2</span>, detailMessage <span class="operator">=</span> replication num should be less than the number <span class="keyword">of</span> available backends. replication num <span class="keyword">is</span> <span class="number">3</span>, available backend num <span class="keyword">is</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><hr /><p>【<strong>原因</strong>】</p><p>be 数量不够。</p><hr /><p>【<strong>解决</strong>】</p><p>在创建 database 的时候进行指定：</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="keyword">create</span> database test PROPERTIES (&quot;replication_allocation&quot;<span class="operator">=</span> &quot;tag.location.default: 1&quot; );</span><br></pre></td></tr></table></figure><h1 id="mysql-可以登录不可以建立分区表-be-数量为0"><a class="markdownIt-Anchor" href="#mysql-可以登录不可以建立分区表-be-数量为0"></a> mysql 可以登录，不可以建立分区表 → be 数量为0</h1><p>【<strong>问题</strong>】</p><ul><li><p><strong>client 报错</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ERROR 1105 (HY000): errCode = 2, detailMessage = errCode = 2, detailMessage = errCode = 2, detailMessage = replication num should be less than the number of available backends. replication num is 1, available backend num is 0</span><br></pre></td></tr></table></figure></li><li><p><strong>日志报错</strong></p><p>查看日志发现 be 说找不到 fe，fe 找不到 be。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">I20240613 21:15:45.467008 1111236 mem_info.cpp:459] Refresh cgroup memory win, refresh again after 10s, cgroup mem <span class="built_in">limit</span>: 9223372036854771712, cgroup mem usage: 13997985792, cgroup mem info cached: 0</span><br><span class="line">W20240613 21:15:49.361387 1110431 olap_server.cpp:714] Have not get FE Master heartbeat yet</span><br><span class="line">W20240613 21:15:50.491954 1109571 fragment_mgr.cpp:886] Could not find any running frontends, maybe we are upgrading? We will not cancel any running queries <span class="keyword">in</span> this situation.</span><br><span class="line">I20240613 21:15:51.379978 1110598 task_worker_pool.cpp:686] waiting to receive first heartbeat from frontend before doing report</span><br><span class="line">I20240613 21:15:51.836712 1110309 wal_manager.cpp:480] Scheduled(every 10s) WAL info: [/home/zhenlong/code/doris/output/be/storage/wal: <span class="built_in">limit</span> 795363328 Bytes, used 0 Bytes, estimated wal bytes 0 Bytes, available 795363328 Bytes.];</span><br><span class="line">W20240613 21:15:52.586161 1116046 status.h:423] meet error status: [INTERNAL_ERROR]invalid cluster <span class="built_in">id</span>. ignore. Record cluster <span class="built_in">id</span> =789047984, record frontend info . Invalid cluster_id=1306576199, invalid frontend info TFrontendInfo(coordinator_address=TNetworkAddress(hostname=172.17.1.228, port=9020), process_uuid=1718284452423) </span><br><span class="line"></span><br><span class="line">0#  doris::Status doris::Status::Error&lt;6, <span class="literal">true</span>, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;) at /home/zhenlong/code/doris/be/src/common/status.h:422</span><br><span class="line">1#  doris::Status doris::Status::InternalError&lt;<span class="literal">true</span>, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;(std::basic_string_view&lt;char, std::char_traits&lt;char&gt; &gt;, int&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;, int const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&amp;) at /home/zhenlong/code/doris/be/src/common/status.h:468</span><br><span class="line">2#  doris::HeartbeatServer::_heartbeat(doris::TMasterInfo const&amp;) at /home/zhenlong/code/doris/be/src/agent/heartbeat_server.cpp:116</span><br><span class="line">3#  doris::HeartbeatServer::heartbeat(doris::THeartbeatResult&amp;, doris::TMasterInfo const&amp;) at /home/zhenlong/code/doris/be/src/agent/heartbeat_server.cpp:74</span><br><span class="line">4#  doris::HeartbeatServiceProcessor::process_heartbeat(int, apache::thrift::protocol::TProtocol*, apache::thrift::protocol::TProtocol*, void*) at /home/zhenlong/code/doris/gensrc/build/gen_cpp/HeartbeatService.cpp:298</span><br><span class="line">5#  doris::HeartbeatServiceProcessor::dispatchCall(apache::thrift::protocol::TProtocol*, apache::thrift::</span><br></pre></td></tr></table></figure></li></ul><hr /><p>【<strong>解决</strong>】删除 output 目录中的子目录 fe 和 be，重新编译安装成功了。</p><p>【<strong>更新</strong>】删除 <code>output/be/storage</code> 内容，重新启动 be。</p><h1 id="执行回归测试时出现-jar-缺失报错"><a class="markdownIt-Anchor" href="#执行回归测试时出现-jar-缺失报错"></a> 执行回归测试时出现 jar 缺失报错</h1><p>回归测试：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">./run-regression-test.sh --run test_remove</span><br></pre></td></tr></table></figure><p>报错：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">Could not resolve dependencies for project org.apache.doris:regression-test:jar:1.0-SNAPSHOT: Could not find artifact jdk.tools:jdk.tools:jar:1.7 at specified path /usr/lib/jvm/java-11-openjdk-amd64/../lib/tools.jar</span><br></pre></td></tr></table></figure><p>原因是 java11 下没有对应 jar 包，但是 java8 下有，所以 JAVA_HOME 改成 java8 即可：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">export JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64</span><br></pre></td></tr></table></figure><h1 id="fe无法启动log显示image-does-not-exist-homezhenlongcodedorisoutputfedoris-metaimageimage0"><a class="markdownIt-Anchor" href="#fe无法启动log显示image-does-not-exist-homezhenlongcodedorisoutputfedoris-metaimageimage0"></a> fe无法启动，log显示：image does not exist: /home/zhenlong/code/doris/output/fe/doris-meta/image/image.0</h1><p>观察 output/fe/log/fe.warn.log，发现是因为磁盘空间不足造成的。</p><h1 id="be无法启动-address-already-in-use"><a class="markdownIt-Anchor" href="#be无法启动-address-already-in-use"></a> be无法启动 -&gt; Address already in use</h1><p>【<strong>问题</strong>】</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">start BE in local mode</span><br><span class="line">Doris BE server did not start correctly, exiting</span><br><span class="line">*** Query id: 0-0 ***</span><br><span class="line">*** is nereids: 0 ***</span><br><span class="line">*** tablet id: 0 ***</span><br><span class="line">*** Aborted at 1711251949 (unix time) try &quot;date -d @1711251949&quot; if you are using GNU date ***</span><br><span class="line">*** Current BE git commitID: 2c377e69a9 ***</span><br><span class="line">*** SIGSEGV address not mapped to object (@0x80) received by PID 2331840 (TID 2331840 OR 0x7f88bd98db80) from PID 128; stack trace: ***</span><br><span class="line"></span><br><span class="line">W20240324 11:45:45.365067 2333118 doris_main.cpp:125] thrift internal message: TServerSocket::listen() Could not bind to port 9060</span><br><span class="line">E20240324 11:45:45.365289 2333118 thrift_server.cpp:165] ThriftServer &#x27;backend&#x27; (on port: 9060) exited due to TException: Could not bind: Address already in use</span><br></pre></td></tr></table></figure><hr /><p>【<strong>解决</strong>】</p><p>若仍没有解决，则先kill掉be进程: <code>lsof -i:9060</code></p><h1 id="client-无法登陆9030-端口没开启"><a class="markdownIt-Anchor" href="#client-无法登陆9030-端口没开启"></a> client 无法登陆，9030 端口没开启</h1><p>【<strong>问题</strong>】</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WARN (UNKNOWN fe_7e29d323_27e2_4414_88e0_65bca5217033(-1)|1) [Env.notifyNewFETypeTransfer():2612] notify new FE <span class="built_in">type</span> transfer: UNKNOWN</span><br></pre></td></tr></table></figure><hr /><p>【<strong>解决</strong>】</p><p>清空fe的元数据目录doris-meta下的所有数据。重新启动即可：</p><p><a href="https://blog.csdn.net/u011385544/article/details/118603874">https://blog.csdn.net/u011385544/article/details/118603874</a></p><h1 id="be-因为-swap-无法启动"><a class="markdownIt-Anchor" href="#be-因为-swap-无法启动"></a> be 因为 swap 无法启动</h1><p>/home/dragon/code/doris/output/be/bin/start_be.sh</p><p>去掉下面的：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">if [[ &quot;$(swapon -s | wc -l)&quot; -gt 1 ]]; then</span><br><span class="line">    echo &quot;Disable swap memory before starting be&quot;</span><br><span class="line">    exit 1</span><br><span class="line">fi</span><br></pre></td></tr></table></figure><h1 id="to-fixfe-无法启动slf4j-class-path-contains-multiple-slf4j-bindings"><a class="markdownIt-Anchor" href="#to-fixfe-无法启动slf4j-class-path-contains-multiple-slf4j-bindings"></a> （TO FIX）fe 无法启动：SLF4J: Class path contains multiple SLF4J bindings.</h1><p>【<strong>问题</strong>】</p><ul><li><p><strong>报错</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">35</span>,<span class="number">795</span> INFO (main<span class="operator">|</span><span class="number">1</span>) [DorisFE.start():<span class="number">156</span>] Doris FE starting...</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">35</span>,<span class="number">798</span> INFO (main<span class="operator">|</span><span class="number">1</span>) [FrontendOptions.initAddrUseIp():<span class="number">101</span>] <span class="keyword">local</span> address: <span class="operator">/</span><span class="number">192.168</span><span class="number">.1</span><span class="number">.103</span>.</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">35</span>,<span class="number">939</span> INFO (main<span class="operator">|</span><span class="number">1</span>) [ConsistencyChecker.initWorkTime():<span class="number">105</span>] consistency checker will work <span class="keyword">from</span> <span class="number">23</span>:<span class="number">00</span> <span class="keyword">to</span> <span class="number">23</span>:<span class="number">00</span></span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">027</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Util.report():<span class="number">128</span>] SLF4J: Class path <span class="keyword">contains</span> multiple SLF4J bindings.</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">027</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Util.report():<span class="number">128</span>] SLF4J: Found binding <span class="keyword">in</span> [jar:file:<span class="operator">/</span>home<span class="operator">/</span>dragon<span class="operator">/</span>code<span class="operator">/</span>doris<span class="operator">/</span>output<span class="operator">/</span>fe<span class="operator">/</span>lib<span class="operator">/</span>slf4j<span class="operator">-</span>reload4j<span class="number">-1.7</span><span class="number">.36</span>.jar<span class="operator">!</span><span class="operator">/</span>org<span class="operator">/</span>slf4j<span class="operator">/</span>impl<span class="operator">/</span>StaticLoggerBinder.class]</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">027</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Util.report():<span class="number">128</span>] SLF4J: Found binding <span class="keyword">in</span> [jar:file:<span class="operator">/</span>home<span class="operator">/</span>dragon<span class="operator">/</span>code<span class="operator">/</span>doris<span class="operator">/</span>output<span class="operator">/</span>fe<span class="operator">/</span>lib<span class="operator">/</span>log4j<span class="operator">-</span>slf4j<span class="operator">-</span>impl<span class="number">-2.18</span><span class="number">.0</span>.jar<span class="operator">!</span><span class="operator">/</span>org<span class="operator">/</span>slf4j<span class="operator">/</span>impl<span class="operator">/</span>StaticLoggerBinder.class]</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">028</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Util.report():<span class="number">128</span>] SLF4J: See <span class="operator">&lt;</span>http:<span class="operator">/</span><span class="operator">/</span>www.slf4j.org<span class="operator">/</span>codes.html#multiple_bindings<span class="operator">&gt;</span> <span class="keyword">for</span> an explanation.</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">036</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Util.report():<span class="number">128</span>] SLF4J: Actual binding <span class="keyword">is</span> <span class="keyword">of</span> type [org.slf4j.impl.Reload4jLoggerFactory]</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">320</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] java.lang.ExceptionInInitializerError</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">320</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] <span class="keyword">at</span> org.apache.doris.catalog.AliasFunction.getExpr(AliasFunction.java:<span class="number">105</span>)</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">321</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] <span class="keyword">at</span> org.apache.doris.catalog.AliasFunction.initBuiltins(AliasFunction.java:<span class="number">91</span>)</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">321</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] <span class="keyword">at</span> org.apache.doris.catalog.FunctionSet.init(FunctionSet.java:<span class="number">97</span>)</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">321</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] <span class="keyword">at</span> org.apache.doris.catalog.Env.<span class="operator">&lt;</span>init<span class="operator">&gt;</span>(Env.java:<span class="number">711</span>)</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">321</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] <span class="keyword">at</span> org.apache.doris.catalog.EnvFactory.createEnv(EnvFactory.java:<span class="number">71</span>)</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">321</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] <span class="keyword">at</span> org.apache.doris.catalog.Env$SingletonHolder.<span class="operator">&lt;</span>clinit<span class="operator">&gt;</span>(Env.java:<span class="number">656</span>)</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">322</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] <span class="keyword">at</span> org.apache.doris.catalog.Env.getCurrentEnv(Env.java:<span class="number">815</span>)</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">323</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] <span class="keyword">at</span> org.apache.doris.DorisFE.start(DorisFE.java:<span class="number">178</span>)</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">323</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] <span class="keyword">at</span> org.apache.doris.DorisFE.main(DorisFE.java:<span class="number">95</span>)</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">323</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] Caused <span class="keyword">by</span>: java.lang.RuntimeException: Cannot find <span class="keyword">external</span> parser <span class="keyword">table</span> action_table.dat</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">323</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] <span class="keyword">at</span> org.apache.doris.analysis.SqlParser.loadTableFromFile(SqlParser.java:<span class="number">2964</span>)</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">324</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] <span class="keyword">at</span> org.apache.doris.analysis.SqlParser.<span class="operator">&lt;</span>clinit<span class="operator">&gt;</span>(SqlParser.java:<span class="number">604</span>)</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">324</span> ERROR (main<span class="operator">|</span><span class="number">1</span>) [Throwable$WrappedPrintStream.println():<span class="number">763</span>] ... <span class="number">9</span> more</span><br><span class="line"><span class="number">2024</span><span class="number">-06</span><span class="number">-12</span> <span class="number">17</span>:<span class="number">58</span>:<span class="number">36</span>,<span class="number">324</span> WARN (main<span class="operator">|</span><span class="number">1</span>) [DorisFE.start():<span class="number">225</span>] </span><br><span class="line">java.lang.ExceptionInInitializerError: <span class="keyword">null</span></span><br><span class="line"><span class="keyword">at</span> org.apache.doris.catalog.AliasFunction.getExpr(AliasFunction.java:<span class="number">105</span>) <span class="operator">~</span>[doris<span class="operator">-</span>fe.jar:<span class="number">1.2</span><span class="operator">-</span>SNAPSHOT]</span><br><span class="line"><span class="keyword">at</span> org.apache.doris.catalog.AliasFunction.initBuiltins(AliasFunction.java:<span class="number">91</span>) <span class="operator">~</span>[doris<span class="operator">-</span>fe.jar:<span class="number">1.2</span><span class="operator">-</span>SNAPSHOT]</span><br><span class="line"><span class="keyword">at</span> org.apache.doris.catalog.FunctionSet.init(FunctionSet.java:<span class="number">97</span>) <span class="operator">~</span>[doris<span class="operator">-</span>fe.jar:<span class="number">1.2</span><span class="operator">-</span>SNAPSHOT]</span><br><span class="line"><span class="keyword">at</span> org.apache.doris.catalog.Env.<span class="operator">&lt;</span>init<span class="operator">&gt;</span>(Env.java:<span class="number">711</span>) <span class="operator">~</span>[doris<span class="operator">-</span>fe.jar:<span class="number">1.2</span><span class="operator">-</span>SNAPSHOT]</span><br><span class="line"><span class="keyword">at</span> org.apache.doris.catalog.EnvFactory.createEnv(EnvFactory.java:<span class="number">71</span>) <span class="operator">~</span>[doris<span class="operator">-</span>fe.jar:<span class="number">1.2</span><span class="operator">-</span>SNAPSHOT]</span><br><span class="line"><span class="keyword">at</span> org.apache.doris.catalog.Env$SingletonHolder.<span class="operator">&lt;</span>clinit<span class="operator">&gt;</span>(Env.java:<span class="number">656</span>) <span class="operator">~</span>[doris<span class="operator">-</span>fe.jar:<span class="number">1.2</span><span class="operator">-</span>SNAPSHOT]</span><br><span class="line"><span class="keyword">at</span> org.apache.doris.catalog.Env.getCurrentEnv(Env.java:<span class="number">815</span>) <span class="operator">~</span>[doris<span class="operator">-</span>fe.jar:<span class="number">1.2</span><span class="operator">-</span>SNAPSHOT]</span><br><span class="line"><span class="keyword">at</span> org.apache.doris.DorisFE.start(DorisFE.java:<span class="number">178</span>) <span class="operator">~</span>[doris<span class="operator">-</span>fe.jar:<span class="number">1.2</span><span class="operator">-</span>SNAPSHOT]</span><br><span class="line"><span class="keyword">at</span> org.apache.doris.DorisFE.main(DorisFE.java:<span class="number">95</span>) <span class="operator">~</span>[doris<span class="operator">-</span>fe.jar:<span class="number">1.2</span><span class="operator">-</span>SNAPSHOT]</span><br><span class="line">Caused <span class="keyword">by</span>: java.lang.RuntimeException: Cannot find <span class="keyword">external</span> parser <span class="keyword">table</span> action_table.dat</span><br><span class="line"><span class="keyword">at</span> org.apache.doris.analysis.SqlParser.loadTableFromFile(SqlParser.java:<span class="number">2964</span>) <span class="operator">~</span>[doris<span class="operator">-</span>fe.jar:<span class="number">1.2</span><span class="operator">-</span>SNAPSHOT]</span><br><span class="line"><span class="keyword">at</span> org.apache.doris.analysis.SqlParser.<span class="operator">&lt;</span>clinit<span class="operator">&gt;</span>(SqlParser.java:<span class="number">604</span>) <span class="operator">~</span>[doris<span class="operator">-</span>fe.jar:<span class="number">1.2</span><span class="operator">-</span>SNAPSHOT]</span><br><span class="line">... <span class="number">9</span> more</span><br></pre></td></tr></table></figure></li></ul><hr /><p>【<strong>解决</strong>】</p><p>解决：删除 <code>output/fe</code>，重新编译 fe 即可。</p><p><strong>每次修改少量 fe 代码，重新编译 fe，都会遇到这种问题，待解决。</strong></p><p><strong>开发机上删除 <code>output/fe/doris_meta</code>，重新编译 fe 即可。</strong></p><p>参考：</p><ul><li><a href="https://github.com/apache/doris/issues/29122">https://github.com/apache/doris/issues/29122</a></li><li><a href="https://github.com/apache/doris/discussions/6610">https://github.com/apache/doris/discussions/6610</a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;cluster-default_cluster-has-no-available-capacity&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#cluster-default_cluster-has-no-available-capa</summary>
      
    
    
    
    <category term="DB" scheme="https://dragonliu2018.github.io/categories/DB/"/>
    
    <category term="doris" scheme="https://dragonliu2018.github.io/categories/DB/doris/"/>
    
    
  </entry>
  
  <entry>
    <title>[Tool][opt] Instruments + speedsope 安装与使用</title>
    <link href="https://dragonliu2018.github.io/2025/09/26/Tool-opt-Instruments-speedsope-%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/"/>
    <id>https://dragonliu2018.github.io/2025/09/26/Tool-opt-Instruments-speedsope-%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BD%BF%E7%94%A8/</id>
    <published>2025-09-25T16:34:54.000Z</published>
    <updated>2025-09-26T00:58:05.704Z</updated>
    
    <content type="html"><![CDATA[<h1 id="a-安装引子"><a class="markdownIt-Anchor" href="#a-安装引子"></a> A 安装引子</h1><p>在 macbook 上做 cmu 15445 fall 2022 p1 时，p1 在线测试超时了，需要进行性能调优。但是 macos 上没有 perf，调研后发现替代物 → Instruments。</p><h1 id="步骤"><a class="markdownIt-Anchor" href="#步骤"></a> 步骤</h1><ol><li>Instruments 集成在 xcode 中，所以先要安装 xcode（xcode 体积大，约 7G，所以一定要注意 macos 和 xcode 的版本对应 → <a href="https://developer.apple.com/cn/support/xcode/%EF%BC%8C%E4%B8%8D%E8%A6%81%E4%B8%8B%E8%BD%BD%E9%94%99%E4%BA%86%E7%89%88%E6%9C%AC%F0%9F%A5%A6">https://developer.apple.com/cn/support/xcode/，不要下载错了版本🥦</a></li><li>可以通过 App Store 进行下载，或者通过这个链接 → <a href="https://developer.apple.com/download/all/?q=for%20Xcode">https://developer.apple.com/download/all/?q=for Xcode</a></li></ol><hr /><p>【<strong>参考</strong>】<a href="https://blog.csdn.net/sunshine__sun/article/details/115062452"><strong>安装Xcode的方法</strong></a></p><h1 id="b-使用引子"><a class="markdownIt-Anchor" href="#b-使用引子"></a> B 使用引子</h1><p>Instruments 是一款苹果自带的测试工具，用于相关的性能分析和动态跟踪，其中有内存性能测试，图形性能测试、内存性能测试等。</p><p>打开 xcode；</p><p>通过导航栏找到 Instruments：</p><p><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-26_08-51-01.png" alt="" /></p><p>或者 <code>command + 空格</code> 直接搜索 Instruments 即可。</p><hr /><p>打开 <code>Time Profiler</code> 进行性能分析：</p><p><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-26_08-52-01.png" alt="" /></p><hr /><p>主要通过下面两种方式进行耗时分析：</p><h1 id="1-可执行程序"><a class="markdownIt-Anchor" href="#1-可执行程序"></a> 1 可执行程序</h1><p>选择 <code>可执行程序</code>，然后点击 <code>开始</code> 图标即可。</p><p><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-26_08-52-02.png" alt="" /></p><blockquote><p>⚠️：当时分析 cum 15445 fall 2022 p1 的时候，这种不能得出好的结果，就使用了下面进程的方式。</p></blockquote><h1 id="2-进程"><a class="markdownIt-Anchor" href="#2-进程"></a> 2 进程</h1><ol><li><p>这里选择分析 <code>所有进程</code>，因为要分析的是一个可执行文件，不太好把他搞成一个进程。<br /><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-26_08-52-03.png" alt="" /></p></li><li><p>点击 <code>开始</code> 图标，执行目标文件，等待目标文件执行完，点击 <code>结束</code> 图标；</p></li><li><p>这时可以看到分析结果，目标文件也在其中：</p><p><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-26_08-52-04.png" alt="" /></p></li><li><p>为了方便查看，可以将其单独领出来，点击右侧 ➡️；</p></li><li><p>可以看到 <code>HardTest_4</code> 的主要耗时在 <code>HistoryCmpLess()</code> 函数上：</p><p><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-26_08-52-05.png" alt="" /></p></li><li><p>耗时集中在下面三行代码，推测是 <code>history_</code> 的随机取数据导致性能低下。</p><p><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-26_08-52-06.png" alt="" /></p><p>查看 <code>history_</code> 类型，果然是 map 类型，但是使用 unordered_map 更加高效。更换数据类型后，耗时下降到 <strong>7s</strong>，符合预期。</p></li></ol><h1 id="3-火焰图"><a class="markdownIt-Anchor" href="#3-火焰图"></a> 3 火焰图</h1><p>就可以利用 speedsope 生成火焰图：</p><p><a href="https://www.speedscope.app/">speedscope</a></p><h1 id="x-参考"><a class="markdownIt-Anchor" href="#x-参考"></a> X 参考</h1><ul><li><a href="https://juejin.cn/post/6865102561507672077"><strong>Instrument工具使用</strong></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;a-安装引子&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#a-安装引子&quot;&gt;&lt;/a&gt; A 安装引子&lt;/h1&gt;
&lt;p&gt;在 macbook 上做 cmu 15445 fall 2022 p1 时，p1 在线测试超时了，需要进行性能调优。但是</summary>
      
    
    
    
    <category term="Tool" scheme="https://dragonliu2018.github.io/categories/Tool/"/>
    
    <category term="opt" scheme="https://dragonliu2018.github.io/categories/Tool/opt/"/>
    
    
  </entry>
  
  <entry>
    <title>[Tool][opt] C++ benchmark</title>
    <link href="https://dragonliu2018.github.io/2025/09/26/Tool-opt-C-benchmark/"/>
    <id>https://dragonliu2018.github.io/2025/09/26/Tool-opt-C-benchmark/</id>
    <published>2025-09-25T16:30:37.000Z</published>
    <updated>2025-09-25T16:37:20.394Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-编译"><a class="markdownIt-Anchor" href="#1-编译"></a> 1 编译</h1><ol><li><p>clone 仓库：<code>git clone https://github.com/google/benchmark.git</code></p></li><li><p>新建 build：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> benchmark</span><br><span class="line"><span class="built_in">mkdir</span> build</span><br><span class="line"><span class="built_in">cd</span> build</span><br></pre></td></tr></table></figure></li><li><p>cmake &amp; 下载依赖:</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake -DBENCHMARK_DOWNLOAD_DEPENDENCIES=on -DCMAKE_BUILD_TYPE=Release ../</span><br></pre></td></tr></table></figure></li><li><p>编译：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cmake --build <span class="string">&quot;build&quot;</span> --config Release</span><br></pre></td></tr></table></figure></li></ol><h1 id="2-编写测试"><a class="markdownIt-Anchor" href="#2-编写测试"></a> 2 编写测试</h1><h1 id="3-在线-benchmark"><a class="markdownIt-Anchor" href="#3-在线-benchmark"></a> 3 在线 benchmark</h1><p><a href="https://quick-bench.com/q/6tDxsmk3FMX55B8W1RrdiG_s7_k">https://quick-bench.com/q/6tDxsmk3FMX55B8W1RrdiG_s7_k</a></p><h1 id="x-参考"><a class="markdownIt-Anchor" href="#x-参考"></a> X 参考</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-编译&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-编译&quot;&gt;&lt;/a&gt; 1 编译&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;clone 仓库：&lt;code&gt;git clone https://github.com/google/bench</summary>
      
    
    
    
    <category term="PL" scheme="https://dragonliu2018.github.io/categories/PL/"/>
    
    <category term="Tool" scheme="https://dragonliu2018.github.io/categories/Tool/"/>
    
    <category term="C++" scheme="https://dragonliu2018.github.io/categories/PL/C/"/>
    
    <category term="opt" scheme="https://dragonliu2018.github.io/categories/Tool/opt/"/>
    
    
  </entry>
  
  <entry>
    <title>[Tool][opt] gperf 安装使用教程</title>
    <link href="https://dragonliu2018.github.io/2025/09/26/Tool-opt-gperf-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>https://dragonliu2018.github.io/2025/09/26/Tool-opt-gperf-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2025-09-25T16:28:23.000Z</published>
    <updated>2025-09-25T16:38:29.450Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-介绍"><a class="markdownIt-Anchor" href="#1-介绍"></a> 1 介绍</h1><p><a href="https://github.com/gperftools/gperftools">https://github.com/gperftools/gperftools</a></p><p><a href="https://github.com/gperftools/gperftools">gperftools</a> 是谷歌推出的一套非常强大的性能分析工具集. 它主要有这三个功能:</p><ul><li>分析 CPU 性能, 能够统计出一段时间内各个函数的执行时间, 帮助我们找出耗时的代码;</li><li>分析内存占用情况, 能够统计出某一时刻各个函数分配的内存大小, 帮助我们找出内存占用高的代码, 也能帮助我们定位内存泄露;</li><li>自动检查内存泄露.</li></ul><p>gperftools 还包含一个高性能内存分配器 tcmalloc, 我们可以用它代替 glibc 的 ptmalloc. tcmalloc 自带统计功能, 内存分析和检查内存泄露就靠它.</p><p>本文介绍 gperftools 在 Linux 下的一些常见的用法. 如果你需要使用 gperftools 分析 Linux (服务器) 程序, 这篇文章可以当作一个 Quick Start.</p><h1 id="2-安装"><a class="markdownIt-Anchor" href="#2-安装"></a> 2 安装</h1><p><strong>方法1：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ruby -e <span class="string">&quot;<span class="subst">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>&quot;</span> &lt; /dev/null 2&gt; /dev/null</span><br></pre></td></tr></table></figure><p><strong>方法2:</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">brew install gperftools</span><br></pre></td></tr></table></figure><h1 id="3-使用"><a class="markdownIt-Anchor" href="#3-使用"></a> 3 使用</h1><h1 id="x-参考"><a class="markdownIt-Anchor" href="#x-参考"></a> X 参考</h1><ul><li><a href="https://stackoverflow.com/questions/23200704/install-perf-on-mac"><strong>Install “perf” on Mac</strong></a></li><li><a href="https://luyuhuang.tech/2022/04/10/gperftools.html"><strong>使用 gperftools 分析程序性能</strong></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-介绍&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-介绍&quot;&gt;&lt;/a&gt; 1 介绍&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/gperftools/gperftools&quot;&gt;https://github.</summary>
      
    
    
    
    <category term="Tool" scheme="https://dragonliu2018.github.io/categories/Tool/"/>
    
    <category term="opt" scheme="https://dragonliu2018.github.io/categories/Tool/opt/"/>
    
    
  </entry>
  
  <entry>
    <title>[Tool][opt] perf 安装使用教程</title>
    <link href="https://dragonliu2018.github.io/2025/09/26/Tool-opt-perf-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/"/>
    <id>https://dragonliu2018.github.io/2025/09/26/Tool-opt-perf-%E5%AE%89%E8%A3%85%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B/</id>
    <published>2025-09-25T16:24:37.000Z</published>
    <updated>2025-09-25T16:38:14.178Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-ubuntu-安装步骤"><a class="markdownIt-Anchor" href="#1-ubuntu-安装步骤"></a> 1 ubuntu 安装步骤</h1><ol><li><p>安装<code>linux-tools-common</code>：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install linux-tools-common</span><br></pre></td></tr></table></figure></li><li><p>此时运行perf仍然失败：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  matrixdb git:(main) ✗ perf</span><br><span class="line">WARNING: perf not found <span class="keyword">for</span> kernel 5.15.0-69</span><br><span class="line"></span><br><span class="line">  You may need to install the following packages <span class="keyword">for</span> this specific kernel:</span><br><span class="line">    linux-tools-5.15.0-69-generic</span><br><span class="line">    linux-cloud-tools-5.15.0-69-generic</span><br><span class="line"></span><br><span class="line">  You may also want to install one of the following packages to keep up to <span class="built_in">date</span>:</span><br><span class="line">    linux-tools-generic</span><br><span class="line">    linux-cloud-tools-generic</span><br></pre></td></tr></table></figure></li><li><p>根据提示先进行对应包的更新：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install linux-tools-generic linux-cloud-tools-generic</span><br></pre></td></tr></table></figure></li><li><p>下载对应包：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get install linux-tools-5.15.0-69-generic linux-cloud-tools-5.15.0-69-generic</span><br></pre></td></tr></table></figure></li><li><p>进行验证，下载成功：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  matrixdb git:(main) ✗ perf -v</span><br><span class="line">perf version 5.15.87</span><br></pre></td></tr></table></figure></li></ol><h1 id="2-卸载"><a class="markdownIt-Anchor" href="#2-卸载"></a> 2 卸载</h1><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> apt-get remove linux-tools-common linux-tools-$(<span class="built_in">uname</span> -r) linux-cloud-tools-$(<span class="built_in">uname</span> -r)</span><br></pre></td></tr></table></figure><h1 id="3-报错"><a class="markdownIt-Anchor" href="#3-报错"></a> 3 报错</h1><h2 id="31-报错1the-cpu_corecycles-event-is-not-supported"><a class="markdownIt-Anchor" href="#31-报错1the-cpu_corecycles-event-is-not-supported"></a> 3.1 报错1：The cpu_core/cycles/ event is not supported.</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  build git:(p1) ✗ <span class="built_in">sudo</span> perf record ./test/buffer_pool_manager_instance_test</span><br><span class="line">Error:</span><br><span class="line">The cpu_core/cycles/ event is not supported.</span><br></pre></td></tr></table></figure><p>在公司 macbook 上没有出现报错，在实验室 win11 上出现上述问题。</p><p><strong>参考</strong> <a href="https://www.cnblogs.com/azureology/p/13913540.html">虚拟机Linux使用perf stat提示cycles not supported</a>，解决方法如下：</p><ol><li>关闭VMware虚拟机电源，找到硬件配置选项中CPU</li><li>勾选<code>☑️虚拟化CPU性能计数器</code></li><li>重启问题解决（但是我的机器勾选后无法启动虚拟机了🥦</li></ol><h1 id="4-使用"><a class="markdownIt-Anchor" href="#4-使用"></a> 4 使用</h1><h2 id="41-抓取性能信息"><a class="markdownIt-Anchor" href="#41-抓取性能信息"></a> 4.1 抓取性能信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 进程</span></span><br><span class="line"><span class="built_in">sudo</span> perf record --call-graph=dwarf -p 479061</span><br><span class="line"></span><br><span class="line"><span class="comment"># 可执行文件</span></span><br><span class="line"><span class="built_in">sudo</span> perf record --call-graph=dwarf ./exec</span><br></pre></td></tr></table></figure><h2 id="42-结果展示"><a class="markdownIt-Anchor" href="#42-结果展示"></a> 4.2 结果展示</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">sudo</span> perf report -i perf.data --no-inline -g</span><br></pre></td></tr></table></figure><h2 id="43-快捷键"><a class="markdownIt-Anchor" href="#43-快捷键"></a> 4.3 快捷键</h2><ol><li>展开：<code>shift</code> + <code>+</code></li><li></li></ol><h1 id="x-参考"><a class="markdownIt-Anchor" href="#x-参考"></a> X 参考</h1><ul><li><a href="https://www.jianshu.com/p/4659063b3c0d"><strong>基于Ubuntu 18.04 安装perf工具</strong></a></li><li><a href="https://installati.one/install-perf-tools-unstable-ubuntu-22-04/"><strong>How To Install perf-tools-unstable on Ubuntu 22.04</strong></a></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;1-ubuntu-安装步骤&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#1-ubuntu-安装步骤&quot;&gt;&lt;/a&gt; 1 ubuntu 安装步骤&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;安装&lt;code&gt;linux-tools-common&lt;/c</summary>
      
    
    
    
    <category term="Tool" scheme="https://dragonliu2018.github.io/categories/Tool/"/>
    
    <category term="opt" scheme="https://dragonliu2018.github.io/categories/Tool/opt/"/>
    
    
  </entry>
  
  <entry>
    <title>[PL][C++] 性能优化汇总</title>
    <link href="https://dragonliu2018.github.io/2025/09/26/PL-C-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%B1%87%E6%80%BB/"/>
    <id>https://dragonliu2018.github.io/2025/09/26/PL-C-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96%E6%B1%87%E6%80%BB/</id>
    <published>2025-09-25T16:06:51.000Z</published>
    <updated>2025-09-25T16:20:12.162Z</updated>
    
    <content type="html"><![CDATA[<h1 id="常用技巧"><a class="markdownIt-Anchor" href="#常用技巧"></a> 常用技巧</h1><ul><li>避免构造不必要的对象，例如 std::string</li><li>函数返回值为常量字符串时，且需要 std::string_view 类型；函数返回值类型可以设为 std::string_view，如果设为 std::string，会有多余的拷贝。</li></ul><h1 id="分支预测-unlikely"><a class="markdownIt-Anchor" href="#分支预测-unlikely"></a> 分支预测 &amp; unlikely</h1><p>ref：<a href="https://www.zhihu.com/question/639443238">https://www.zhihu.com/question/639443238</a></p><h1 id="避免反复构造和析构-vector"><a class="markdownIt-Anchor" href="#避免反复构造和析构-vector"></a> 避免反复构造和析构 vector</h1><p>【热点】</p><p>问题来源于 YMatrix 实习，下面的 vector 声明在了 for 循环内部，每次遍历都会进行构造和析构，成本较大。</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (std::<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; times; ++i) &#123;</span><br><span class="line">std::vector&lt;std::<span class="type">uint32_t</span>&gt; idx_chain;</span><br><span class="line"><span class="built_in">func</span>(idx_chain);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr /><p>【优化】</p><p>可以将 vector 声明位置提到 for 循环外部，每次遍历对 vector 进行 clear 即可</p><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">std::vector&lt;std::<span class="type">uint32_t</span>&gt; idx_chain;</span><br><span class="line"><span class="keyword">for</span> (std::<span class="type">size_t</span> i = <span class="number">0</span>; i &lt; times; ++i) &#123;</span><br><span class="line">    idx_chain.<span class="built_in">clear</span>();</span><br><span class="line">    <span class="built_in">func</span>(idx_chain);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="vector-使用-reserve-避免重复内存申请与数据复制"><a class="markdownIt-Anchor" href="#vector-使用-reserve-避免重复内存申请与数据复制"></a> vector 使用 reserve 避免重复内存申请与数据复制</h1><h2 id="场景介绍"><a class="markdownIt-Anchor" href="#场景介绍"></a> 场景介绍</h2><p><strong>当使用 vector 时，如果已知需要多少元素的空间，则使用 <code>reserve</code> 函数预先分配足够的内存空间，减少动态内存分配和元素复制的次数</strong>。这使得插入操作更加高效，尤其是在处理大量数据时，性能优势更加明显。</p><h2 id="代码验证"><a class="markdownIt-Anchor" href="#代码验证"></a> 代码验证</h2><p>【<strong>链接</strong>】<a href="https://quick-bench.com/q/ctDLCeIqzoycLX9KUuBajAapaUA">https://quick-bench.com/q/ctDLCeIqzoycLX9KUuBajAapaUA</a></p><hr /><ul><li><p><strong>代码</strong></p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">constexpr</span> <span class="type">int</span> SIZE = <span class="number">10000</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">vector_push_back_one_by_one</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::vector&lt;std::string&gt; str_vec;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; SIZE; i++) &#123;</span><br><span class="line">        str_vec.<span class="built_in">push_back</span>(std::<span class="built_in">to_string</span>(i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">vector_push_back_reserve</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    std::vector&lt;std::string&gt; str_vec;</span><br><span class="line">    str_vec.<span class="built_in">reserve</span>(SIZE);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; SIZE; i++) &#123;</span><br><span class="line">        str_vec.<span class="built_in">push_back</span>(std::<span class="built_in">to_string</span>(i));</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">PushOneByOne</span><span class="params">(benchmark::State&amp; state)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Code inside this loop is measured repeatedly</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> _ : state) &#123;</span><br><span class="line">    <span class="keyword">auto</span> ret = <span class="built_in">vector_push_back_one_by_one</span>();</span><br><span class="line">    <span class="comment">// Make sure the variable is not optimized away by compiler</span></span><br><span class="line">    benchmark::<span class="built_in">DoNotOptimize</span>(ret);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Register the function as a benchmark</span></span><br><span class="line"><span class="built_in">BENCHMARK</span>(PushOneByOne);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">PushReserve</span><span class="params">(benchmark::State&amp; state)</span> </span>&#123;</span><br><span class="line">  <span class="comment">// Code before the loop is not measured</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">auto</span> _ : state) &#123;</span><br><span class="line">    <span class="keyword">auto</span> ret = <span class="built_in">vector_push_back_reserve</span>();</span><br><span class="line">    <span class="comment">// Make sure the variable is not optimized away by compiler</span></span><br><span class="line">    benchmark::<span class="built_in">DoNotOptimize</span>(ret);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">BENCHMARK</span>(PushReserve);</span><br></pre></td></tr></table></figure></li></ul><p><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-26_00-16-21.png" alt="" /></p><h2 id="gpt-现象解释"><a class="markdownIt-Anchor" href="#gpt-现象解释"></a> GPT 现象解释</h2><p><code>vector_push_back_reserve</code> 函数比 <code>vector_push_back_one_by_one</code> 函数高效的原因主要在于内存分配策略的不同。</p><h3 id="vector_push_back_one_by_one-函数"><a class="markdownIt-Anchor" href="#vector_push_back_one_by_one-函数"></a> <strong><code>vector_push_back_one_by_one</code> 函数</strong></h3><ul><li><strong>动态内存分配</strong>：<code>std::vector</code> 的 <code>push_back</code> 方法会在容器容量不足时，自动分配新的内存来存储更多的元素。每次分配的内存大小通常是当前容量的两倍左右（具体策略因标准库实现而异）。例如，初始容量可能为 0，第一次调用 <code>push_back</code> 时分配一定大小的内存（如 16 个元素的空间），当插入第 17 个元素时，会重新分配内存（如 32 个元素的空间），并将原有元素复制到新的内存空间中，然后释放旧的内存空间。</li><li><strong>多次内存分配和复制</strong>：在插入大量元素时，这种动态内存分配会导致多次内存分配和复制操作。每次重新分配内存时，都需要将已有的元素复制到新的内存空间中，这会消耗大量的时间和计算资源。随着元素数量的增加，这种开销会逐渐累积，导致整体性能下降。</li></ul><h3 id="vector_push_back_reserve-函数"><a class="markdownIt-Anchor" href="#vector_push_back_reserve-函数"></a> <strong><code>vector_push_back_reserve</code> 函数</strong></h3><ul><li><strong>预先分配内存</strong>：<code>std::vector</code> 的 <code>reserve</code> 方法允许在容器创建时预先分配足够的内存来存储指定数量的元素。在 <code>vector_push_back_reserve</code> 函数中，通过调用 <code>str_vec.reserve(SIZE)</code>，预先分配了足够存储 <code>SIZE</code> 个 <code>std::string</code> 元素的内存空间。</li><li><strong>减少内存分配和复制</strong>：由于预先分配了足够的内存，后续调用 <code>push_back</code> 方法时，不需要再进行动态内存分配和元素复制操作。所有元素都可以直接插入到预先分配的内存空间中，从而避免了多次内存分配和复制的开销，显著提高了插入操作的效率。</li></ul><h3 id="性能对比"><a class="markdownIt-Anchor" href="#性能对比"></a> <strong>性能对比</strong></h3><ul><li><strong>时间复杂度</strong>：<code>vector_push_back_one_by_one</code> 的时间复杂度为 <em>O</em>(<em>n</em>log<em>n</em>)，因为每次重新分配内存时，都需要复制已有的元素，而复制操作的时间复杂度与当前元素数量成正比。相比之下，<code>vector_push_back_reserve</code> 的时间复杂度为 <em>O</em>(<em>n</em>)，因为所有元素都可以直接插入到预先分配的内存空间中，无需额外的复制操作。</li><li><strong>实际性能</strong>：在实际运行中，<code>vector_push_back_reserve</code> 函数的执行时间通常比 <code>vector_push_back_one_by_one</code> 函数短得多，尤其是在插入大量元素时。这是因为 <code>vector_push_back_one_by_one</code> 函数需要进行多次内存分配和复制操作，而 <code>vector_push_back_reserve</code> 函数只需要一次内存分配，后续的插入操作非常高效。</li></ul><h1 id="unordered_map-替换-map"><a class="markdownIt-Anchor" href="#unordered_map-替换-map"></a> unordered_map 替换 map</h1><h2 id="问题"><a class="markdownIt-Anchor" href="#问题"></a> 问题</h2><p>问题来自与 cmu 15-445 fall 2022 p1，当时在线测试HardTest_4 超时（上限是 10s，当时程序耗时 14s）。</p><h2 id="调优"><a class="markdownIt-Anchor" href="#调优"></a> 调优</h2><p>在 macbook 上跑的项目，没有 perf 分析工具，使用 macos 中的 Instruments 进行分析。</p><p>可以看到 <code>HardTest_4</code> 的主要耗时在 <code>HistoryCmpLess()</code> 函数上：</p><p><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-26_00-19-21.png" alt="" /></p><p>耗时集中在下面三行代码，推测是 <code>history_</code> 的随机取数据导致性能低下。</p><p><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-26_00-19-41.png" alt="" /></p><p>查看 <code>history_</code> 类型，果然是 map 类型，但是使用 unordered_map 更加高效。更换数据类型后，耗时下降到 7s，符合预期。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;常用技巧&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#常用技巧&quot;&gt;&lt;/a&gt; 常用技巧&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;避免构造不必要的对象，例如 std::string&lt;/li&gt;
&lt;li&gt;函数返回值为常量字符串时，且需要 std::str</summary>
      
    
    
    
    <category term="PL" scheme="https://dragonliu2018.github.io/categories/PL/"/>
    
    <category term="C++" scheme="https://dragonliu2018.github.io/categories/PL/C/"/>
    
    
  </entry>
  
  <entry>
    <title>[Tool] docker 使用技巧汇总</title>
    <link href="https://dragonliu2018.github.io/2025/09/25/Tool-docker-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/"/>
    <id>https://dragonliu2018.github.io/2025/09/25/Tool-docker-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/</id>
    <published>2025-09-25T11:56:32.000Z</published>
    <updated>2025-09-25T16:01:36.310Z</updated>
    
    <content type="html"><![CDATA[<h1 id="导出导入镜像"><a class="markdownIt-Anchor" href="#导出导入镜像"></a> 导出导入镜像</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">导出镜像</span></span><br><span class="line">docker save -o doris.tar apache/doris:build-env-ldb-toolchain-latest</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">导入镜像</span></span><br><span class="line">docker load -i doris.tar</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;导出导入镜像&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#导出导入镜像&quot;&gt;&lt;/a&gt; 导出导入镜像&lt;/h1&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;code&quot;&gt;&lt;pr</summary>
      
    
    
    
    <category term="Tool" scheme="https://dragonliu2018.github.io/categories/Tool/"/>
    
    <category term="docker" scheme="https://dragonliu2018.github.io/categories/Tool/docker/"/>
    
    
  </entry>
  
  <entry>
    <title>[PL][Python] 编程技巧汇总</title>
    <link href="https://dragonliu2018.github.io/2025/09/24/PL-Python-%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/"/>
    <id>https://dragonliu2018.github.io/2025/09/24/PL-Python-%E7%BC%96%E7%A8%8B%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/</id>
    <published>2025-09-24T15:47:34.000Z</published>
    <updated>2025-09-24T15:48:11.695Z</updated>
    
    
    
    
    <category term="PL" scheme="https://dragonliu2018.github.io/categories/PL/"/>
    
    <category term="Python" scheme="https://dragonliu2018.github.io/categories/PL/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>[PL][Python] 常见 bug 汇总</title>
    <link href="https://dragonliu2018.github.io/2025/09/24/PL-Python-%E5%B8%B8%E8%A7%81-bug-%E6%B1%87%E6%80%BB/"/>
    <id>https://dragonliu2018.github.io/2025/09/24/PL-Python-%E5%B8%B8%E8%A7%81-bug-%E6%B1%87%E6%80%BB/</id>
    <published>2025-09-24T15:47:16.000Z</published>
    <updated>2025-09-24T15:51:51.209Z</updated>
    
    <content type="html"><![CDATA[<h1 id="sort-sorted"><a class="markdownIt-Anchor" href="#sort-sorted"></a> sort() &amp; sorted()</h1><p>对比两个列表是否含有相同的元素，不需要顺序一样。sort() 函数返回 None，因此不能直接使用 method-1 进行判断。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># method-1 error</span></span><br><span class="line"><span class="keyword">if</span> l1.sort() == l2.sort():</span><br><span class="line">  xxx</span><br><span class="line"></span><br><span class="line"><span class="comment"># method-2 OK</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">sorted</span>(l1) == <span class="built_in">sorted</span>(l2):</span><br><span class="line">  xxx</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;sort-sorted&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#sort-sorted&quot;&gt;&lt;/a&gt; sort() &amp;amp; sorted()&lt;/h1&gt;
&lt;p&gt;对比两个列表是否含有相同的元素，不需要顺序一样。sort() 函数返回</summary>
      
    
    
    
    <category term="PL" scheme="https://dragonliu2018.github.io/categories/PL/"/>
    
    <category term="Python" scheme="https://dragonliu2018.github.io/categories/PL/Python/"/>
    
    
  </entry>
  
  <entry>
    <title>[Tool] github 使用技巧汇总</title>
    <link href="https://dragonliu2018.github.io/2025/09/24/Tool-github-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/"/>
    <id>https://dragonliu2018.github.io/2025/09/24/Tool-github-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/</id>
    <published>2025-09-24T14:45:16.000Z</published>
    <updated>2025-09-24T15:43:04.789Z</updated>
    
    <content type="html"><![CDATA[<h1 id="新增-ssh-密钥到-github-帐户"><a class="markdownIt-Anchor" href="#新增-ssh-密钥到-github-帐户"></a> 新增 SSH 密钥到 GitHub 帐户</h1><ol><li><p>生成 key，一路默认即可：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  .ssh ssh-keygen</span><br></pre></td></tr></table></figure></li><li><p>复制 id_rsa.pub 文件中的内容到 GitHub：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  .ssh cat id_rsa.pub</span><br></pre></td></tr></table></figure></li><li><p>测试是否配置成功：</p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">➜  .ssh ssh -T git@github.com</span><br><span class="line">Hi Dragonliu2018! You&#x27;ve successfully authenticated, but GitHub does not provide shell access.</span><br></pre></td></tr></table></figure></li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;新增-ssh-密钥到-github-帐户&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#新增-ssh-密钥到-github-帐户&quot;&gt;&lt;/a&gt; 新增 SSH 密钥到 GitHub 帐户&lt;/h1&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;生成 key，一</summary>
      
    
    
    
    <category term="Tool" scheme="https://dragonliu2018.github.io/categories/Tool/"/>
    
    <category term="git" scheme="https://dragonliu2018.github.io/categories/Tool/git/"/>
    
    
  </entry>
  
  <entry>
    <title>[Tool] git 报错汇总</title>
    <link href="https://dragonliu2018.github.io/2025/09/24/Tool-git-%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/"/>
    <id>https://dragonliu2018.github.io/2025/09/24/Tool-git-%E6%8A%A5%E9%94%99%E6%B1%87%E6%80%BB/</id>
    <published>2025-09-24T14:44:11.000Z</published>
    <updated>2025-09-24T15:43:06.611Z</updated>
    
    <content type="html"><![CDATA[<h1 id=""><a class="markdownIt-Anchor" href="#"></a> </h1>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#&quot;&gt;&lt;/a&gt; &lt;/h1&gt;
</summary>
      
    
    
    
    <category term="Tool" scheme="https://dragonliu2018.github.io/categories/Tool/"/>
    
    <category term="git" scheme="https://dragonliu2018.github.io/categories/Tool/git/"/>
    
    
  </entry>
  
  <entry>
    <title>[Tool] git 使用技巧汇总</title>
    <link href="https://dragonliu2018.github.io/2025/09/24/Tool-git-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/"/>
    <id>https://dragonliu2018.github.io/2025/09/24/Tool-git-%E4%BD%BF%E7%94%A8%E6%8A%80%E5%B7%A7%E6%B1%87%E6%80%BB/</id>
    <published>2025-09-24T14:21:50.000Z</published>
    <updated>2025-09-26T15:35:54.680Z</updated>
    
    <content type="html"><![CDATA[<h1 id="将当前修改压到-head-commit"><a class="markdownIt-Anchor" href="#将当前修改压到-head-commit"></a> 将当前修改压到 HEAD commit</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git commit --amend</span><br></pre></td></tr></table></figure><h1 id="取消某个文件的更改"><a class="markdownIt-Anchor" href="#取消某个文件的更改"></a> 取消某个文件的更改</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git checkout -- &lt;file_name&gt;</span><br></pre></td></tr></table></figure><blockquote><p>参考：<a href="https://blog.csdn.net/qq_32907195/article/details/115333898">https://blog.csdn.net/qq_32907195/article/details/115333898</a></p></blockquote><h1 id="删除某个文件夹"><a class="markdownIt-Anchor" href="#删除某个文件夹"></a> 删除某个文件(夹)</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">推荐</span></span><br><span class="line">git rm &lt;file_name&gt;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">相当于</span></span><br><span class="line">rm &lt;file_name&gt;</span><br><span class="line">git add &lt;file_name&gt;</span><br></pre></td></tr></table></figure><h1 id="ignore-已经-push-到远端的文件"><a class="markdownIt-Anchor" href="#ignore-已经-push-到远端的文件"></a> ignore 已经 push 到远端的文件</h1><p>【<strong>问题</strong>】</p><p>.vscode 文件夹已经 push 到远程，如何 ignore？</p><hr /><p>【<strong>解决</strong>】</p><ol><li><p>从 Git 索引中移除 .vscode 目录（不会删除本地文件夹，只是让 git 不再跟踪它）：</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">➜  SG-DQA git:(main) git <span class="built_in">rm</span> -r --cached .vscode</span><br><span class="line"><span class="built_in">rm</span> <span class="string">&#x27;.vscode/launch.json&#x27;</span></span><br><span class="line"><span class="built_in">rm</span> <span class="string">&#x27;.vscode/settings.json&#x27;</span></span><br></pre></td></tr></table></figure></li><li><p>添加 <code>.gitignore</code> 文件</p> <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">.vscode/</span><br></pre></td></tr></table></figure></li><li><p>git add &amp; git commit &amp; git push</p></li></ol><h1 id="合并多个-commit"><a class="markdownIt-Anchor" href="#合并多个-commit"></a> 合并多个 commit</h1><p><img src="https://raw.githubusercontent.com/Dragonliu2018/hexo-images-bed/main/2025/Snipaste_2025-09-24_23-13-21.png" alt="" /></p><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">method-1</span></span><br><span class="line">git rebase -i origin/main</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">method-2</span></span><br><span class="line">git rebase -i ce75153a87</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">method-3: 与要合并的commit数量一致</span></span><br><span class="line">git rebase -i HEAD~8</span><br></pre></td></tr></table></figure><h1 id="patch"><a class="markdownIt-Anchor" href="#patch"></a> patch</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git diff &gt; xx.patch</span><br><span class="line">git apply x.patch</span><br></pre></td></tr></table></figure><h1 id="本地分支-远程分支"><a class="markdownIt-Anchor" href="#本地分支-远程分支"></a> 本地分支 &amp; 远程分支</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看本地分支关联（跟踪）的远程分支之间的对应关系</span></span><br><span class="line">git branch -vv</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">推送当前分支到远程（没有对应分支）</span></span><br><span class="line">git push -f --set-upstream origin dragonliu/dictionary_mysql_opt</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">设置本地分支与远程分支的关联</span></span><br><span class="line">git branch --set-upstream-to=origin/&lt;远程分支名&gt;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="删除分支"><a class="markdownIt-Anchor" href="#删除分支"></a> 删除分支</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除本地分支</span></span><br><span class="line">git branch -D fix/authentication</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">删除远程分支</span></span><br><span class="line"> git push origin --delete fix/authentication</span><br></pre></td></tr></table></figure><h1 id="撤销-commit"><a class="markdownIt-Anchor" href="#撤销-commit"></a> 撤销 commit</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">撤销本地 commit</span></span><br><span class="line">git reset --soft HEAD^</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">撤销远程 commit</span></span><br><span class="line">git reset HEAD^</span><br><span class="line">git push -f</span><br></pre></td></tr></table></figure><h1 id="修改远程仓库链接"><a class="markdownIt-Anchor" href="#修改远程仓库链接"></a> 修改远程仓库链接</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">git remote set-url origin git@github.com:Dragonliu2018/doris.git</span><br></pre></td></tr></table></figure><h1 id="切换-tag"><a class="markdownIt-Anchor" href="#切换-tag"></a> 切换 tag</h1><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">查看对应 tag 的代码，这时候 git 可能会提示你当前处于一个“detached HEAD<span class="string">&quot; 状态。</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">因为 tag 相当于是一个快照，是不能更改它的代码的。</span></span></span><br><span class="line">git checkout tag_name</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">基于 tag commit 进行修改</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="string">如果要在 tag 代码的基础上做修改，你需要一个分支</span></span></span><br><span class="line">git checkout -b branch_name tag_name</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;将当前修改压到-head-commit&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#将当前修改压到-head-commit&quot;&gt;&lt;/a&gt; 将当前修改压到 HEAD commit&lt;/h1&gt;
&lt;figure class=&quot;highlight</summary>
      
    
    
    
    <category term="Tool" scheme="https://dragonliu2018.github.io/categories/Tool/"/>
    
    <category term="git" scheme="https://dragonliu2018.github.io/categories/Tool/git/"/>
    
    
  </entry>
  
</feed>
